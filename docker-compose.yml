version: '3.8'

services:
  api:
    build:
      context: backend/
    container_name: api
    ports:
      - 8080:8080
    deploy:
      restart_policy:
        condition: on-failure
    network_mode: host
    depends_on:
      - db
  frontend:
    build:
      context: .
      target: deploy
    container_name: frontend
    environment:
      - ENV_MODE=PROD
    volumes:
      - ./frontend:/code/frontend
    ports:
      - 8000:3000
    deploy:
      restart_policy:
        condition: on-failure
  docs:
    image: python:slim
    container_name: docs
    volumes:
      - ./docs/index.html:/index.html
      - ./docs/openapi.yml:/openapi.yml
    ports:
      - 5332:8080
    command: python -m http.server 8080
    deploy:
      restart_policy:
        condition: on-failure
  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: slavatidika
      POSTGRES_PASSWORD: example
    volumes:
      - /var/slavatidika:/var/lib/postgresql/data/
    network_mode: host
