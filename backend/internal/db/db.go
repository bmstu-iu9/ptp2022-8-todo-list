package db

import (
	"database/sql"
	"fmt"

	"github.com/bmstu-iu9/ptp2022-8-todo-list/backend/internal/config"
	"github.com/bmstu-iu9/ptp2022-8-todo-list/backend/internal/log"
	_ "github.com/lib/pq"
)

var (
	host     = config.Get("DB_HOST")
	port     = config.Get("DB_PORT")
	user     = config.Get("DB_USER")
	dbName   = config.Get("DB_NAME")
	password = config.Get("DB_PASSWORD")
	sslMode  = config.Get("DB_SSL_MODE")
)

func New(logger log.Logger) (*sql.DB, error) {
	params := fmt.Sprintf(
		"host=%s port=%s user=%s dbname=%s password=%s sslmode=%s",
		host, port, user, dbName, password, sslMode)
	logger.Debug("Connecting to DB:", params)
	db, err := sql.Open("postgres", params)
	if err != nil {
		return nil, err
	}

	logger.Debug("Creating new table and test user")
	_, err = db.Exec(`
DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users (
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       email varchar(255) UNIQUE NOT NULL,
       nickname varchar(45) NOT NULL,
       password varchar(100) NOT NULL
);
INSERT INTO users (email, nickname, password) VALUES 
('test@example.com', 'test', 'Test123Test'),
('test2@example.com', 'test2', 'Test123Test');
`)
	if err != nil {
		return nil, err
	}

	_, err = db.Exec(`
DROP TYPE IF EXISTS rarity CASCADE;
CREATE TYPE rarity AS ENUM ('common','rare','epic','legendary');
DROP TYPE IF EXISTS category CASCADE;
CREATE TYPE category AS ENUM ('armor','weapon','pet','skin');
DROP TABLE IF EXISTS items CASCADE;
CREATE TABLE items (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) UNIQUE NOT NULL,
    image_src varchar (255) UNIQUE NOT NULL,
    description text NOT NULL,
    price int NOT NULL,
    item_category category NOT NULL,
    item_rarity rarity NOT NULL
);
INSERT INTO items (name, image_src, description, price, item_category, item_rarity) VALUES 
('testItem1', 'test.png', 'test1', 65, 'armor', 'rare'),
('testItem2', 'test2.png', 'test2', 62, 'weapon', 'epic'),
('testItem3', 'test3.png', 'test3', 69, 'weapon', 'legendary');
`)
	if err != nil {
		return nil, err
	}
	_, err = db.Exec(`
DROP TYPE IF EXISTS states CASCADE;
CREATE TYPE states AS ENUM ('equipped','inventoried');
DROP TABLE IF EXISTS inventory;
CREATE TABLE inventory (
    user_id int,
    item_id int,
    item_state states DEFAULT 'inventoried',
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (item_id) REFERENCES items (id)
);
INSERT INTO inventory (user_id, item_id, item_state) VALUES 
(1, 1, 'inventoried'),
(2, 1, 'equipped'),
(1, 2, 'equipped');
`)
	return db, err
}
